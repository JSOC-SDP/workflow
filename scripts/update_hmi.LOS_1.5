#! /bin/csh -f
# Script to make HMI lev1.5 observables from HMI lev1 data
#

# XXXXXXXXXX test
# set echo
# XXXXXXXXXX test

set HERE = $cwd 

if ($?WORKFLOW_ROOT) then
  set WFDIR = $WORKFLOW_DATA
  set WFCODE = $WORKFLOW_ROOT
else
  echo Need WORKFLOW_ROOT variable to be set.
  exit 1
endif

if ( $JSOC_MACHINE == "linux_x86_64" ) then
  set QUE = j.q
  @ THREADS = 1
  set QSUB = qsub
else if ( $JSOC_MACHINE == "linux_avx" ) then
  set QUE = p4.q
  @ THREADS = 4
  set QSUB = qsub2
endif

foreach ATTR (WANTLOW WANTHIGH GATE)
   set ATTRTXT = `grep $ATTR ticket`
   set $ATTRTXT
end

set product = `cat $WFDIR/gates/$GATE/product`
set key = `cat $WFDIR/gates/$GATE/key`

set ECLIPSEscript = /home/jsoc/pipeline/scripts/eclipse.pl
set HMIprogram = /home/jsoc/cvs/Development/JSOC/bin/$JSOC_MACHINE/HMI_observables

# note in Sebastien's code camera=1 is front camera, where CAMERA=2.
set camera = 1
set nrt = 0
set cadence = 45
set input = hmi.lev1
#set otherargs = "levin="lev1" levout="lev15" wavelength=3 dpath=/home/couvidat/cvs/JSOC/proj/lev1.5_hmi/apps"
#set otherargs = "levin="lev1" levout="lev15" wavelength=3 "
## CHANGED on 10/16/2012 for Sebastien's new observables code
set otherargs = "levin="lev1" levout="lev15" wavelength=3 smooth=1 linearity=1 "

# round times to a slot
set indexlow = `index_convert ds=$product $key=$WANTLOW`
set indexhigh = `index_convert ds=$product $key=$WANTHIGH`
@ indexhigh = $indexhigh - 1
set wantlow = `index_convert ds=$product $key"_index"=$indexlow`
set wanthigh = `index_convert ds=$product $key"_index"=$indexhigh`
# make qsub name from index from door opening
# set indexbase = `index_convert ds=$product $key=2010.03.24_TAI`
# @ qsubname = $indexhigh - $indexbase
set timestr = `echo $wantlow  | sed -e 's/[.:]//g' -e 's/^......//' -e 's/.._TAI//'`
set timename = OBS
set qsubname = $timename$timestr

if ($indexhigh < $indexlow) then
   echo No data to process, $WANTLOW to $WANTHIGH > $HERE/runlog
   exit 0
endif

set TEMPLOG = $HERE/runlog
set babble = $HERE/babble
set TEMPCMD = $HERE/$qsubname
echo 6 > $HERE/retstatus

# check for eclipse quality bits to be set in lev1_nrt
#$ECLIPSEscript $wantlow $wanthigh


set retstatus=0
# make qsub script
echo "#! /bin/csh -f " >$TEMPCMD
echo "setenv OMP_NUM_THREADS $THREADS" >>$TEMPCMD
echo "cd $HERE" >>$TEMPCMD
echo "hostname >>&$TEMPLOG" >>$TEMPCMD
echo "$HMIprogram -L lev1=$input quicklook=$nrt camid=$camera cadence=$cadence $otherargs begin="$wantlow"  end="$wanthigh"  >>&$TEMPLOG" >>$TEMPCMD
echo 'set retstatus = $?' >>$TEMPCMD
echo 'echo $retstatus >' "$HERE/retstatus" >>$TEMPCMD
echo "rm -f $HERE/qsub_running" >>$TEMPCMD

# execute qsub script
touch $HERE/qsub_running
set TEMPLOG = `echo $TEMPLOG | sed "s/^\/auto//"`
$QSUB -sync yes -e $TEMPLOG -o $TEMPLOG -q $QUE $TEMPCMD >> runlog

# set waitcount=0
# while (-e $HERE/qsub_running)
    # sleep 10
    # @ waitcount = $waitcount + 1
    # if ($waitcount > 720) then
      # echo "timed out after 2 hours" >$HERE/FailMessage
      # set retstatus = 5
      # exit $retstatus
    # endif
    # echo -n '+' >>$babble
# end

if (-e retstatus) set retstatus = `cat $HERE/retstatus`
if ($retstatus == 0 ) then
  set WEBIMAGE_TICKET = `$WFCODE/maketicket.csh gate=hmi.defImages wantlow=$wantlow wanthigh=$wanthigh action=5`
  set VW_TICKET = `$WFCODE/maketicket.csh gate=hmi.vw_V wantlow=$wantlow wanthigh=$wanthigh action=5`
endif

exit $retstatus
