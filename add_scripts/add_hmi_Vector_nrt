#! /bin/csh -f
#
# these lines for all products
if ($?WORKFLOW_ROOT) then
  set WFDIR = $WORKFLOW_DATA
  set WFCODE = $WORKFLOW_ROOT
else
  echo Need WORKFLOW_ROOT variable to be set.
  exit 1
endif

cd $WFDIR
rm -f Keep_running
while (-e GATEKEEPERBUSY)
  echo waiting for gatekeeper to quit.
  sleep 5
  end

# begin section for this product

# make test gates and tasks for HMI Vector_nrt Field and other 720s_nrt observables

# remove prior versions

cd $WFDIR/gates
rm -rf hmi.Vector_nrt 

cd $WFDIR/tasks
rm -rf update_hmi.Vector_nrt 

# Make tasks and set preconditions

# NOTE the "command" script used below must be available and executable when this script is run
cd $WFDIR
$WFCODE/maketask.csh task=update_hmi.Vector_nrt manager=taskmanager.csh target=hmi.Vector_nrt \
		command=scripts/update_hmi.Vector_nrt.csh maxrange=2160 parallelOK=4

if ($status) exit 1

mkdir $WFDIR/tasks/update_hmi.Vector_nrt/preconditions/hmi.lev1_nrt
if ($status) exit 1
echo "set ACTION=3" > $WFDIR/tasks/update_hmi.Vector_nrt/preconditions/hmi.lev1_nrt/prepare_ticket

# NOTE hmi.S_720s_nrt is made at the same time as M, V, Ic, Ld, and Lw so only
# one product needs to be tracked here.

cd $WFDIR
$WFCODE/makegate.csh gate_name=hmi.Vector_nrt product=hmi.S_720s_nrt type=time key=T_REC project=HMI \
		 actiontask=update_hmi.Vector_nrt statustask=scripts/status-general.csh
if ($status) exit 1

# Prerequisite gates made in LOS add script

# initialize the gates
$WFCODE/maketicket.csh gate=hmi.Vector_nrt wantlow=NaN wanthigh=NaN action=6
if ($status) exit 1

# RESTART gatekeeper

cd $WFDIR
gatekeeper.csh >&log &


