#! /bin/csh -f

#
# WARNING - do not run this while gatekeeper is active

# script to add a repeating processing to make e.g. to run a task each day.
# When it starts with day i, it will send a restart ticket to be restarted
# a day later.
# The statustask is basically a nop
# The actiontask has a precondition of the full range of times in the calling ticket.
# The precondition ticket is to the clock_gate with a wait until ready action == 3.
# The command script first sends a ticket to its own gate to create the next interval
# then it sends tickets to each of the desired processing gates to initiate the
# computing.  It waits for the processing to be done but not for the repeat ticket.

# This script is setup for HMI NRT data without the auto-fill feature.
# a 5m lag is needed for waiting for new data to be available.

set WFDIR = $WORKFLOW_DATA
set WFCODE = $WORKFLOW_ROOT
cd $WFDIR

set NEWTASK = repeat_mdi_ingest
set NEWGATE = repeat_mdi_ingest

# remove prior test version

if (-e tasks/$NEWTASK) rm -rf tasks/$NEWTASK
if (-e gates/$NEWGATE) rm -rf gates/$NEWGATE

# make the actiontask command that will start processing when current wait interval ends
cat >$WFCODE/scripts/start_mdi.csh << ENDSCRIPT
#! /bin/csh -f
set WANTLOW = \`cat wantlow\`
set WANTHIGH = \`cat wanthigh\`
set WANTLOW_t = \`time_convert time=\$WANTLOW\`
set WANTHIGH_t = \`time_convert time=\$WANTHIGH\`
@ NEXTWANTLOW_t = \$WANTHIGH_t
@ NEXTWANTHIGH_t = \$WANTHIGH_t + 360 
set NEXTWANTLOW = \`time_convert s=\$NEXTWANTLOW_t zone=TAI\`
set NEXTWANTHIGH = \`time_convert s=\$NEXTWANTHIGH_t zone=TAI\`
$WFCODE/maketicket.csh gate=$NEWGATE wantlow=\$NEXTWANTLOW wanthigh=\$NEXTWANTHIGH action=5
# First get taskid of the current instance, it is the name of the current directory
set TASKID = \$cwd:t
# now make tickets to compute the desired products for this interval
set ARGS =  "taskid=\$TASKID wantlow=\$WANTLOW wanthigh=\$WANTHIGH action=5"
set NRTLOS_TICKET = \`$WFCODE/maketicket.csh gate=hmi.LOSnrt  \$ARGS \`
cd pending_tickets
while ((-e \$NRTLOS_TICKET))
   sleep 20
exit 0
end
ENDSCRIPT

chmod +x $WFCODE/scripts/start_hmi_nrt.csh

# finally make task 
$WFCODE/maketask.csh task=$NEWTASK \
		manager=taskmanager.csh \
		target=$NEWGATE \
		maxrange=1200 \
                command=scripts/start_hmi_nrt.csh

# set the precondition ticket to wait until WANTHIGH of the current ticket, this will be LAGDATA behind now
#  mkdir tasks/$NEWTASK/preconditions/clock_gate
#  echo "set ACTION=3" >tasks/$NEWTASK/preconditions/clock_gate/prepare_ticket
# set another precondition to wait until the hmi.lev1_nrt is at least past 4 minutes after WANTHIGH
mkdir tasks/$NEWTASK/preconditions/hmi.lev1nrt
echo 'set ACTION=3'                                        >tasks/$NEWTASK/preconditions/hmi.lev1nrt/prepare_ticket
echo 'set USEHIGH_t = `time_convert time=$USEHIGH`'       >>tasks/$NEWTASK/preconditions/hmi.lev1nrt/prepare_ticket
echo '@ USEHIGH_t = $USEHIGH_t + 240'                     >>tasks/$NEWTASK/preconditions/hmi.lev1nrt/prepare_ticket
echo 'set USEHIGH = `time_convert s=$USEHIGH_t zone=TAI`' >>tasks/$NEWTASK/preconditions/hmi.lev1nrt/prepare_ticket

$WFCODE/makegate.csh gate_name=$NEWGATE \
		 product=none \
		 type=time \
		 key=NA \
		 low=2010.03.24_00:00:00_TAI \
		 high=2010.03.24_00:00:00_TAI \
		 actiontask=$NEWTASK \
		 statustask=scripts/status_clock.csh

# initialization ticket not needed. 

